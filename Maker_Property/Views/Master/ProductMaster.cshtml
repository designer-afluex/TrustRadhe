@model TrustRadhe.Models.Master
@{
    ViewBag.Title = "ProductMaster";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@using (Html.BeginForm("ProductMaster", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
{
 <!--app-content open-->
<div class="app-content">
    <div class="side-app">

        <!-- PAGE-HEADER -->
        <div class="page-header">
            <div>
                <h1 class="page-title">Master</h1>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Admin/AdminDashBoard">Dashboard</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Product Master</li>
                </ol>
            </div>
            <div class="ms-auto pageheader-btn">
                <a href="/Master/ProductList" class="btn btn-primary btn-icon text-white me-2">
                    <span>
                        <i class="fe fe-arrow-left"></i>
                    </span> Back To List
                </a>
            </div>
        </div>
        <!-- PAGE-HEADER END -->
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header">
                        <span style="color: red">
                            @TempData["Product"]
                        </span>
                        <h3 class="card-title">Product Master</h3>
                        <div class="card-options">
                            <a href="#" class="card-options-collapse" data-bs-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                            <a href="#" class="card-options-fullscreen" data-bs-toggle="card-fullscreen"><i class="fe fe-maximize"></i></a>
                            <a href="#" class="card-options-remove" data-bs-toggle="card-remove"><i class="fe fe-x"></i></a>
                        </div>
                    </div>
                    <div class="card-body">
                            <div class="form-row">
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom01">Product Name <span style="color: red">*</span></label>
                                @Html.TextBoxFor(m => m.ProductName, new { @placeholder = "Product Name", @class = "form-control" })
                                @Html.HiddenFor(m => m.ProductID)
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom02">Product Price <span style="color: red">*</span></label>
                                    @Html.TextBoxFor(m => m.ProductPrice, new { @placeholder = "Product Price", @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="validationCustom03">IGST <span style="color: red">*</span></label>
                                    @Html.TextBoxFor(m => m.IGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label for="validationCustom04">CGST <span style="color: red">*</span></label>
                                    @Html.TextBoxFor(m => m.CGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label for="validationCustom05">SGST <span style="color: red">*</span></label>
                                    @Html.TextBoxFor(m => m.SGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label for="validationCustom05">Binary Perc(%)<span style="color: red">*</span></label>
                                    @Html.TextBoxFor(m => m.BinaryPercent, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label for="validationCustom05">BV <span style="color: red">*</span></label>
                                    @Html.TextBoxFor(m => m.BV, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                                <div class="col-md-3 mb-3">
                                    @if (Model == null)
                                    {
                                        <input type="submit" id="btnSaveProduct" class="btn btn-primary" name="btnSaveProduct" value="Save" onclick="return saveProduct();" />
                                    }
                                    else
                                    {
                                        @*<input type="submit" id="btnUpdateProduct" class="btn btn-success pull-right" name="btnUpdateProduct" value="Update" onclick="return updateProduct();" />*@
                                        <a type="submit" id="btnUpdateProduct" class="btn btn-success" name="btnUpdateProduct" value="Update" onclick="return updateProduct();" href="/Master/ProductList">Update</a>
                                    }
                                </div>
                                </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- ROW CLOSED -->
    </div>
</div>
}
    @*<span style="color: red">
        @TempData["Product"]
    </span>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">Product Name <span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.ProductName, new { @placeholder = "Product Name", @class = "form-control" })
                                    @Html.HiddenFor(m => m.ProductID)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">Product Price <span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.ProductPrice, new { @placeholder = "Product Price", @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">IGST <span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.IGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">CGST <span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.CGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">SGST <span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.SGST, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">Binary Perc(%)<span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.BinaryPercent, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                        @*<div class="col-md-3">
        <div class="form-group row">
            <label class="col-sm-3 col-form-label">Direct Perc(%) <span style="color: red">*</span></label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.DirectPercent, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group row">
            <label class="col-sm-3 col-form-label">ROI Per(%) <span style="color: red">*</span></label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.ROIPercent, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
            </div>
        </div>
    </div>*

                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">BV <span style="color: red">*</span></label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.BV, new { @class = "form-control", @onkeypress = "return isNumberKey(event)" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                           
                                @if (Model == null)
                                {
                                    <input type="submit" id="btnSaveProduct" class="btn btn-success" name="btnSaveProduct" value="Save" onclick="return saveProduct();" />
                                }
                                else
                                {
                                    @*<input type="submit" id="btnUpdateProduct" class="btn btn-success pull-right" name="btnUpdateProduct" value="Update" onclick="return updateProduct();" />*
                                    <a type="submit" id="btnUpdateProduct" class="btn btn-success" name="btnUpdateProduct" value="Update" onclick="return updateProduct();" href="/Master/ProductList">Update</a>
                                }

                            <a class="btn btn-primary" href="/Master/ProductList">Back To List</a>
                               
                           
                        </div>
                    </div>
                </div>
                <!-- /.panel-body -->
            </div>
            <!-- /.panel -->
            <!-- /.panel -->
        </div>




    </div>*@


}
<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>
<script>
    function validate() {
        $(".errortext").removeClass("errortext");
        if ($('#ProductName').val() == '') {
            $("#ProductName").addClass('errortext');
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductPrice').val() == '') {
            $("#ProductPrice").addClass('errortext');
            $('#ProductPrice').focus();
            return false;
        }
        if ($('#IGST').val() == '') {
            $("#IGST").addClass('errortext');
            $('#IGST').focus();
            return false;
        }
        if ($('#CGST').val() == '') {
            $("#CGST").addClass('errortext');
            $('#CGST').focus();
            return false;
        }
        if ($('#SGST').val() == '') {
            $("#SGST").addClass('errortext');
            $('#SGST').focus();
            return false;
        }
        if ($('#BinaryPercent').val() == '') {
            $("#BinaryPercent").addClass('errortext');
            $('#BinaryPercent').focus();
            return false;
        }


    }
    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function getMemberDetails(obj) {

        $.ajax({
            url: '/Transactions/GetMemberDetails',
            type: 'GET',
            dataType: 'JSON',
            data: { 'LoginID': $(obj).val() },
            success: function (response) {
                if (response.Result == "Yes") {

                    $('#txtMemberName').val(response.DisplayName);
                }
                else {

                    $('#txtLoginID').val('');
                    $('#txtMemberName').val('');
                    alert(response.Result);
                }
            }
        })
    }

    function saveProduct() {
        $(".errortext").removeClass("errortext");
        if ($('#ProductName').val() == '') {
            $("#ProductName").addClass('errortext');
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductPrice').val() == '') {
            $("#ProductPrice").addClass('errortext');
            $('#ProductPrice').focus();
            return false;
        }
        if ($('#IGST').val() == '') {
            $("#IGST").addClass('errortext');
            $('#IGST').focus();
            return false;
        }
        if ($('#CGST').val() == '') {
            $("#CGST").addClass('errortext');
            $('#CGST').focus();
            return false;
        }
        if ($('#SGST').val() == '') {
            $("#SGST").addClass('errortext');
            $('#SGST').focus();
            return false;
        }
        if ($('#BinaryPercent').val() == '') {
            $("#BinaryPercent").addClass('errortext');
            $('#BinaryPercent').focus();
            return false;
        }
        if ($('#BV').val() == '') {
            $("#BV").addClass('errortext');
            $('#BV').focus();
            return false;
        }

        $.ajax({
            url: "/Master/SaveProduct",
            Type: "Get",
            DataType: "JSON",
            data: { ProductName: $("#ProductName").val(), ProductPrice: $("#ProductPrice").val(), IGST: $("#IGST").val(), CGST: $("#CGST").val(), SGST: $("#SGST").val(), BinaryPercent: $("#BinaryPercent").val(), DirectPercent: $("#DirectPercent").val(), ROIPercent: $("#ROIPercent").val(), BV: $("#BV").val() },
            success: function (data) {
                alert(data.Result);
                window.location.href = '@Url.Action("ProductList", "Master")';

            }

        });
    }

    function updateProduct() {
        $(".errortext").removeClass("errortext");
        if ($('#ProductName').val() == '') {
            $("#ProductName").addClass('errortext');
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductPrice').val() == '') {
            $("#ProductPrice").addClass('errortext');
            $('#ProductPrice').focus();
            return false;
        }
        if ($('#IGST').val() == '') {
            $("#IGST").addClass('errortext');
            $('#IGST').focus();
            return false;
        }
        if ($('#CGST').val() == '') {
            $("#CGST").addClass('errortext');
            $('#CGST').focus();
            return false;
        }
        if ($('#SGST').val() == '') {
            $("#SGST").addClass('errortext');
            $('#SGST').focus();
            return false;
        }
        if ($('#BinaryPercent').val() == '') {
            $("#BinaryPercent").addClass('errortext');
            $('#BinaryPercent').focus();
            return false;
        }
        if ($('#DirectPercent').val() == '') {
            $("#DirectPercent").addClass('errortext');
            $('#DirectPercent').focus();
            return false;
        }
        if ($('#ROIPercent').val() == '') {
            $("#ROIPercent").addClass('errortext');
            $('#ROIPercent').focus();
            return false;
        }
        if ($('#BV').val() == '') {
            $("#BV").addClass('errortext');
            $('#BV').focus();
            return false;
        }

        $.ajax({
            url: "/Master/UpdateProduct",
            Type: "Get",
            DataType: "JSON",
            data: { ProductID: $("#ProductID").val(), ProductName: $("#ProductName").val(), ProductPrice: $("#ProductPrice").val(), IGST: $("#IGST").val(), CGST: $("#CGST").val(), SGST: $("#SGST").val(), BinaryPercent: $("#BinaryPercent").val(), DirectPercent: $("#DirectPercent").val(), ROIPercent: $("#ROIPercent").val(), BV: $("#BV").val() },
            success: function (data) {
                alert(data.Result);
                window.location.href = '@Url.Action("ProductList", "Master")';

            }

        });

    }

</script>
